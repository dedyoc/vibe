[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "bluesky-streaming-pipeline"
version = "0.1.0"
description = "Real-time streaming data pipeline for Bluesky firehose trend detection"
authors = [
    {name = "Development Team", email = "dev@example.com"},
]
readme = "README.md"
requires-python = ">=3.9"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "aiohttp>=3.12.15",
    "aioredis>=2.0.1",
    "atproto>=0.0.62",
    "boto3>=1.40.27",
    "fastapi>=0.116.1",
    "httpx>=0.28.1",
    "kafka-python>=2.2.15",
    "prometheus-client>=0.22.1",
    "pydantic>=2.11.7",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.1.0",
    "pytest-mock>=3.15.0",
    "python-dotenv>=1.1.1",
    "redis>=6.4.0",
    "requests>=2.32.5",
    "structlog>=25.4.0",
    "uvicorn>=0.35.0",
]

[tool.hatch.build.targets.wheel]
packages = ["shared"]

dependencies = [
    "atproto>=0.0.46",
    "kafka-python>=2.0.2",
    "apache-flink>=1.18.0",
    "pydantic>=2.5.0",
    "structlog>=23.2.0",
    "prometheus-client>=0.19.0",
    "redis>=5.0.1",
    "boto3>=1.34.0",
    "asyncio-mqtt>=0.16.1",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.1.8",
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.12.0",
    "mypy>=1.7.1",
    "black>=23.11.0",
    "isort>=5.12.0",
]

test = [
    "pytest>=7.4.3",
    "pytest-asyncio>=0.21.1",
    "pytest-mock>=3.12.0",
    "pytest-cov>=4.1.0",
    "testcontainers>=3.7.1",
]

[project.urls]
Homepage = "https://github.com/example/bluesky-streaming-pipeline"
Repository = "https://github.com/example/bluesky-streaming-pipeline.git"
Issues = "https://github.com/example/bluesky-streaming-pipeline/issues"

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.ruff.isort]
known-first-party = ["shared", "services"]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = [
    "tests",
]
asyncio_mode = "auto"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "kafka.*",
    "pyflink.*",
    "atproto.*",
]
ignore_missing_imports = true
